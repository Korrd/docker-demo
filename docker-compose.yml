networks:
  demo_net:
    driver: bridge

services:
  traefik:
    image: traefik:v3.4.3
    command:
      - "--api.insecure=true" # Enable Traefik dashboard
      - "--providers.docker=true" # Enable Docker provider
      - "--providers.docker.exposedbydefault=false" # Disable automatic exposure of containers
      - "--entrypoints.web.address=:80" # Define entrypoint for HTTP
    ports:
      - "80:80"
      - "8080:8080" # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - demo_net

  wordpress:
    image: wordpress:6.5
    env_file:
      - .env
    volumes:
      - wordpress_data:/var/www/html
    labels:
      - "traefik.enable=true" # Enable Traefik for this service
      - "traefik.http.routers.wordpress.rule=Host(`wordpress.localhost`)" # Define routing rule for WordPress
      - "traefik.http.routers.wordpress.entrypoints=web" # Use the web entrypoint
      - "traefik.http.services.wordpress.loadbalancer.server.port=80" # Port WordPress listens on
    networks:
      - demo_net
    depends_on:
      - db

  db:
    image: mariadb:11
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/mysql # Persist database data on docker volume
    networks:
      - demo_net

  web:
    build: ./my-web
    volumes:
      - ./my-web:/app # Mount the local directory to the container
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`web.localhost`)"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.services.web.loadbalancer.server.port=5000"
    networks:
      - demo_net

volumes:
  wordpress_data:
  db_data:
