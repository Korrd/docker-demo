networks:
  demo_net:
    driver: bridge

services:
  traefik:
    image: traefik:v3.4.3
    command:
      - "--api.insecure=true" # Enable Traefik dashboard
      - "--providers.docker=true" # Enable Docker provider
      - "--providers.docker.exposedbydefault=false" # Disable automatic exposure of containers
      - "--entrypoints.web.address=:80" # Define entrypoint for HTTP
    ports:
      - "80:80"
      - "8080:8080" # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - demo_net
    depends_on:
      - wordpress

  wordpress:
    image: wordpress:6.5
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: wp
      WORDPRESS_DB_USER: wp
      WORDPRESS_DB_PASSWORD: wp
    volumes:
      - wordpress_data:/var/www/html
    labels:
      - "traefik.enable=true" # Enable Traefik for this service
      - "traefik.http.routers.wordpress.rule=Host(`wordpress.localhost`)" # Define routing rule for WordPress
      - "traefik.http.routers.wordpress.entrypoints=web" # Use the web entrypoint
      - "traefik.http.services.wordpress.loadbalancer.server.port=80" # Port WordPress listens on
    networks:
      - demo_net
    depends_on:
      - db

  db:
    image: mariadb:11
    environment:
      MYSQL_ROOT_PASSWORD: root # Shame on me!
      MYSQL_DATABASE: wp
      MYSQL_USER: wp
      MYSQL_PASSWORD: wp
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - demo_net

  api:
    build: ./api-service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=5000"
    networks:
      - demo_net

volumes:
  wordpress_data:
  db_data: